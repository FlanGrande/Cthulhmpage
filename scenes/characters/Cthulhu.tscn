[gd_scene load_steps=12 format=2]

[ext_resource path="res://scripts/characters/Cthulhu.gd" type="Script" id=1]
[ext_resource path="res://icon.png" type="Texture" id=2]

[sub_resource type="VisualShaderNodeColorConstant" id=1]
constant = Color( 0, 0.363281, 0.0652771, 1 )

[sub_resource type="VisualShader" id=2]
code = "shader_type canvas_item;



void vertex() {
// Salida:0

}

void fragment() {
// Color:2
	vec3 n_out2p0;
	float n_out2p1;
	n_out2p0 = vec3(0.000000,0.363281,0.065277);
	n_out2p1 = 1.000000;

// Salida:0
	COLOR.rgb = n_out2p0;
	COLOR.a = n_out2p1;

}

void light() {
// Salida:0

}
"
graph_offset = Vector2( 0, 114 )
mode = 1
flags/light_only = false
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( 200, 160 )
nodes/fragment/connections = PoolIntArray( 2, 0, 0, 0, 2, 1, 0, 1 )

[sub_resource type="ShaderMaterial" id=3]
shader = SubResource( 2 )

[sub_resource type="RectangleShape2D" id=4]
extents = Vector2( 48, 80 )

[sub_resource type="RectangleShape2D" id=5]
extents = Vector2( 28, 80 )

[sub_resource type="CapsuleShape2D" id=6]
radius = 14.9001
height = 71.2108

[sub_resource type="Animation" id=7]
resource_name = "attack"
length = 2.0
tracks/0/type = "value"
tracks/0/path = NodePath("Arm:visible")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Arm:position")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 1, 1.5, 1.8 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 4, -20 ), Vector2( -25, -31 ), Vector2( 37, -15 ), Vector2( 51, -25 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Arm:rotation_degrees")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 1, 1.5, 1.8 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ 0.0, 0.0, -10.0, -45.0 ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("Arm/RigidBody2D/CollisionShape2D:disabled")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 1 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ false ]
}

[sub_resource type="Animation" id=8]
length = 2.0
tracks/0/type = "value"
tracks/0/path = NodePath("Arm:visible")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Arm:position")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 1, 1.5, 1.8 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 4, -20 ), Vector2( -25, -31 ), Vector2( 40, 112 ), Vector2( 51, -25 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Arm:rotation_degrees")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 1, 1.5, 1.8 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ 0.0, 0.0, -10.0, -45.0 ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("Arm/RigidBody2D/CollisionShape2D:disabled")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 1 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ false ]
}

[sub_resource type="Animation" id=9]
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:texture")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ ExtResource( 2 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Arm:visible")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ false ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Arm/RigidBody2D/CollisionShape2D:disabled")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}

[node name="Cthulhu" type="KinematicBody2D" groups=[
"cthulhu",
]]
position = Vector2( 552, 732 )
collision/safe_margin = 0.3
script = ExtResource( 1 )

[node name="Sprite" type="Sprite" parent="."]
material = SubResource( 3 )
scale = Vector2( 1.5, 2.5 )
texture = ExtResource( 2 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
shape = SubResource( 4 )

[node name="Area2D" type="Area2D" parent="."]

[node name="CollisionShape2D2" type="CollisionShape2D" parent="Area2D"]
shape = SubResource( 5 )

[node name="Arm" type="Node2D" parent="."]
light_mask = 0
position = Vector2( 4, -20 )

[node name="Sprite2" type="Sprite" parent="Arm"]
rotation = 0.261799
scale = Vector2( 1.55909, 0.536773 )
texture = ExtResource( 2 )

[node name="RigidBody2D" type="RigidBody2D" parent="Arm" groups=[
"punch",
]]
collision_layer = 4
collision_mask = 4
mode = 3
gravity_scale = 0.0

[node name="CollisionShape2D" type="CollisionShape2D" parent="Arm/RigidBody2D"]
rotation = 1.83259
shape = SubResource( 6 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
playback_speed = 3.0
anims/attack = SubResource( 7 )
anims/attack_swing = SubResource( 8 )
anims/idle = SubResource( 9 )
[connection signal="area_shape_entered" from="Area2D" to="." method="_on_Area2D_area_shape_entered"]
[connection signal="area_shape_exited" from="Area2D" to="." method="_on_Area2D_area_shape_exited"]
[connection signal="body_shape_entered" from="Area2D" to="." method="_on_Area2D_body_shape_entered"]
[connection signal="body_shape_exited" from="Area2D" to="." method="_on_Area2D_body_shape_exited"]
